import logging
import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–≤–æ—Ä–∫–∞—é")

# –ö–æ–º–∞–Ω–¥–∞ /murr
async def murr(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(f"{user.first_name} –ø–æ–º—É—Ä—á–∞–≤!üêæ")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
    WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # URL –≤–∞—à–æ–≥–æ –≤–µ–±—Ö—É–∫–∞ (–¥–æ–º–µ–Ω Render)

    if not TELEGRAM_TOKEN or not WEBHOOK_URL:
        logger.error("TELEGRAM_TOKEN –∞–±–æ WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω—ñ –≤ —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ!")
        return

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("murr", murr))

    # –ó–∞–ø—É—Å–∫ –≤–µ–±—Ö—É–∫–∞
    await application.run_webhook(
        listen="0.0.0.0",  # –í–∫–∞–∑—É—î–º–æ, —â–æ –ø—Ä–∏–π–º–∞—î–º–æ –≤—Å—ñ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        port=8443,         # –ü–æ—Ä—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–∞ (Render –≤—ñ–¥–∫—Ä–∏–≤–∞—î 8443)
        webhook_url="https://kitimifia.onrender.com",  # –í–∞—à –≤–µ–±—Ö—É–∫ URL
    )

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
