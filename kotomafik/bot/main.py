import logging
import os
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–≤–æ—Ä–∫–∞—é")

# –ö–æ–º–∞–Ω–¥–∞ /murr
async def murr(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(f"{user.first_name} –ø–æ–º—É—Ä—á–∞–≤!üêæ")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–æ—Ç–∞
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("murr", murr))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ polling
    await application.run_polling()

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ event loop
if __name__ == "__main__":
    try:
        # –Ø–∫—â–æ event loop —É–∂–µ —ñ—Å–Ω—É—î, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        loop = asyncio.get_event_loop()
    except RuntimeError:
        # –Ø–∫—â–æ event loop –Ω–µ —ñ—Å–Ω—É—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
    loop.run_until_complete(main())
