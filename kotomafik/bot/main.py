import random
import string
import requests
import time
import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –¥–ª—è —Ç–æ–∫–µ–Ω—ñ–≤
TOKEN = os.getenv("TOKEN")
MONOBANK_API = os.getenv("MONOBANK")
MONOBANK_CARD_NUMBER = os.getenv("MONOBANK_CARD_NUMBER")

# –ó–º—ñ—Å—Ç –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_data = {}
donations = {}

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∫–æ–¥—É –¥–ª—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
def generate_comment_code():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=6))

# –ö–æ–º–∞–Ω–¥–∞ /donate
async def donate(update: Update, context: CallbackContext):
    user = update.effective_user
    user_id = str(user.id)

    # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –∫–æ–¥—É –¥–ª—è –∫–æ–º–µ–Ω—Ç–∞—Ä—è
    comment_code = generate_comment_code()

    # –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Monobank
    monobank_url = f"https://api.monobank.ua/p2p/{MONOBANK_CARD_NUMBER}?amount={{amount}}&comment={comment_code}"

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ–¥ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
    donations[user_id] = {"comment_code": comment_code, "amount_donated": 0}

    await update.message.reply_text(
        f"–î—è–∫—É—î–º–æ –∑–∞ –±–∞–∂–∞–Ω–Ω—è –∑—Ä–æ–±–∏—Ç–∏ –¥–æ–Ω–∞—Ç! ü§ù\n"
        f"–ë—É–¥—å –ª–∞—Å–∫–∞, –∑—Ä–æ–±–∏ –ø–µ—Ä–µ–∫–∞–∑ –Ω–∞ –±–∞–Ω–∫—ñ–≤—Å—å–∫—É –∫–∞—Ä—Ç–∫—É Monobank –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º –Ω–∏–∂—á–µ:\n"
        f"{monobank_url}\n"
        f"–ù–µ –∑–∞–±—É–¥—å –≤–∫–∞–∑–∞—Ç–∏ –∫–æ–¥ –∫–æ–º–µ–Ω—Ç–∞—Ä—è: {comment_code}"
    )

# –ö–æ–º–∞–Ω–¥–∞ /balance
async def balance(update: Update, context: CallbackContext):
    user = update.effective_user
    user_id = str(user.id)

    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –º—É—Ä–∫–æ—ó–Ω—ñ–≤
    balance = user_data.get(user_id, {}).get("balance", 0)

    await update.message.reply_text(
        f"–¢–≤—ñ–π –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –º—É—Ä–∫–æ—ó–Ω—ñ–≤: {balance} MurrCoins."
    )

# –ö–æ–º–∞–Ω–¥–∞ /spend
async def spend(update: Update, context: CallbackContext):
    user = update.effective_user
    user_id = str(user.id)

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —Å–∫—ñ–ª—å–∫–∏ –º—É—Ä–∫–æ—ó–Ω—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ö–æ—á–µ –≤–∏—Ç—Ä–∞—Ç–∏—Ç–∏
    if len(context.args) != 1 or not context.args[0].isdigit():
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å MurrCoins –¥–ª—è –≤–∏—Ç—Ä–∞—Ç–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, /spend 10.")
        return

    amount = int(context.args[0])

    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    balance = user_data.get(user_id, {}).get("balance", 0)

    if balance < amount:
        await update.message.reply_text(f"–£ —Ç–µ–±–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ MurrCoins –¥–ª—è —Ü—ñ—î—ó –≤–∏—Ç—Ä–∞—Ç–∏. –¢–≤—ñ–π –±–∞–ª–∞–Ω—Å: {balance} MurrCoins.")
        return

    # –ó–º–µ–Ω—à—É—î–º–æ –±–∞–ª–∞–Ω—Å —ñ –∑–±—ñ–ª—å—à—É—î–º–æ –¥–æ–≤–∂–∏–Ω—É –≤—É—Å—ñ–≤
    user_data[user_id]["balance"] -= amount
    user_data[user_id]["usik_length"] += amount * 5  # 5 –º–º –∑–∞ –∫–æ–∂–µ–Ω –≤–∏—Ç—Ä–∞—á–µ–Ω–∏–π MurrCoin

    await update.message.reply_text(
        f"–¢–∏ –≤–∏—Ç—Ä–∞—Ç–∏–≤ {amount} MurrCoins, —ñ —Ç–≤–æ—ó –≤—É—Å–∞ –≤–∏—Ä–æ—Å–ª–∏ –Ω–∞ {amount * 5} –º–º! üêæ\n"
        f"–¢–µ–ø–µ—Ä —Ç–≤—ñ–π –±–∞–ª–∞–Ω—Å: {user_data[user_id]['balance']} MurrCoins.\n"
        f"–ó–∞–≥–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ —Ç–≤–æ—ó—Ö –≤—É—Å—ñ–≤: {user_data[user_id]['usik_length']} –º–º."
    )

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –¥–æ–Ω–∞—Ç—ñ–≤
def monitor_donations():
    while True:
        for user_id, donation in donations.items():
            comment_code = donation["comment_code"]

            # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ Monobank API
            response = requests.get(f"https://api.monobank.ua/p2p/{MONOBANK_CARD_NUMBER}/transactions",
                                    headers={"Authorization": f"Bearer {MONOBANK_API}"})
            transactions = response.json()

            for transaction in transactions:
                if transaction.get('comment') == comment_code:
                    # –Ø–∫—â–æ —Å—É–º–∞ –¥–æ–Ω–∞—Ç—É –∑–±—ñ–≥–∞—î—Ç—å—Å—è –∑ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º, –¥–æ–¥–∞—î–º–æ MurrCoins
                    amount = transaction['amount'] / 100  # –ü–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤ –≥—Ä–∏–≤–Ω—ñ (Monobank API –¥–∞—î –∫–æ–ø—ñ–π–∫–∏)
                    if user_id not in user_data:
                        user_data[user_id] = {"balance": 0, "usik_length": 0}

                    user_data[user_id]["balance"] += amount
                    donations[user_id]["amount_donated"] += amount

                    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è
                    context.bot.send_message(user_id, f"–¢–∏ –æ—Ç—Ä–∏–º–∞–≤ {amount} MurrCoins –∑–∞ –¥–æ–Ω–∞—Ç –Ω–∞ {comment_code}.")
                    break

        # –ß–µ–∫–∞—î–º–æ 10 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é
        time.sleep(10)

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞
def start_bot():
    updater = Updater(TOKEN, use_context=True)
    dispatcher = updater.dispatcher

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler('donate', donate))
    dispatcher.add_handler(CommandHandler('balance', balance))
    dispatcher.add_handler(CommandHandler('spend', spend))

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –¥–æ–Ω–∞—Ç—ñ–≤ —É —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
    import threading
    donation_thread = threading.Thread(target=monitor_donations)
    donation_thread.daemon = True
    donation_thread.start()

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    start_bot()
